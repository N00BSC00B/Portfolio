[
    {
        "id": 1,
        "title": "JobiPilot: AI-Powered Job Application Automation",
        "tags": [
            "Automation",
            "n8n",
            "AI",
            "LLM",
            "Gemini",
            "Google Sheets",
            "API Integration"
        ],
        "description": [
            "• An automated n8n workflow that builds a daily job application pipeline from multiple sources.",
            "• Fetches job listings from various RSS feeds (Himalayas, Remotive, WWR) and the JSearch API.",
            "• Filters listings by date and relevant keywords (e.g., 'backend', 'python', 'developer') to curate a list of suitable opportunities.",
            "• Utilizes Google's Gemini 2.5 Pro model via LangChain to analyze each job against a personal resume, generating a match score, a tailored cover letter, and resume improvement suggestions.",
            "• Automatically personalizes a base LaTeX resume for each specific job application based on the AI's feedback.",
            "• Populates a Google Sheet with all curated jobs and AI-generated content, and sends a Discord notification upon completion."
        ],
        "image": "projects/jobipilot.png",
        "githubUrl": null,
        "demoUrl": "https://youtu.be/okH0C4mGj4c"
    },
    {
        "id": 2,
        "title": "Udemy Free Course Grabber",
        "tags": [
            "React",
            "Electron",
            "Capacitor",
            "Cross-Platform",
            "Vite",
            "Udemy"
        ],
        "description": [
            "• A cross-platform application for Windows and Android to discover and access thousands of free Udemy courses.",
            "• Built with a modern tech stack including React, Vite, Electron for desktop, and Capacitor for mobile.",
            "• Features smart filtering by category, rating, and duration, along with real-time search functionality.",
            "• Offers a responsive design with dark/light themes for a seamless user experience across all devices.",
            "• Fetches the latest course data in real-time from course aggregation APIs, with acknowledgments to the Real Discount API."
        ],
        "image": "projects/udemy.png",
        "githubUrl": "https://github.com/N00BSC00B/Udemy-Free-Course-Grabber",
        "demoUrl": null
    },
    {
        "id": 3,
        "title": "DCC Integration with Blender",
        "tags": [
            "Blender",
            "FastAPI",
            "PyQt",
            "Python",
            "SQLite"
        ],
        "description": [
            "• Integrates Blender with a FastAPI server and a PyQt-based GUI for seamless inventory and object transformation management.",
            "• **Blender Plugin**: Provides inventory display and object transformation capabilities directly within Blender's sidebar.",
            "• **FastAPI Server**: Handles inventory management (add, remove, update, fetch items) and object transformation requests (position, rotation, scale).",
            "• **PyQt GUI**: Offers a user-friendly desktop application for managing inventory with features like search, pagination, context menus, and real-time updates.",
            "• Enables a comprehensive workflow for Digital Content Creation (DCC) environments."
        ],
        "image": "projects/blender.png",
        "githubUrl": "https://github.com/N00BSC00B/DCC-Integration-with-Blender",
        "demoUrl": null
    },
    {
        "id": 4,
        "title": "Rotom Bot",
        "tags": [
            "Python",
            "Discord.py",
            "Discord Bot",
            "Pokemon",
            "Showdown API"
        ],
        "description": [
            "• A comprehensive Discord server management bot built with discord.py for 'The Pokehub' server.",
            "• Automates **tournament registration** and management, integrating with the **Pokemon Showdown API** for verification.",
            "• Manages **user roles and leagues** for annual Pokemon league-style events.",
            "• Offers a **role management system** for 'Villain Teams' with timed access to secret chats.",
            "• Includes a **profanity filter** for a family-friendly community environment.",
            "• Features **text translation** powered by Googletrans, and **dictionary lookups** (Urban Dictionary and English Dictionary).",
            "• Provides 'snipe' and 'edit snipe' features for recovering recent messages.",
            "• Comes with various **message-based games** like Guess The Number, Tic-Tac-Toe (with minimax AI), and Rock-Paper-Scissors.",
            "• Offers **miscellaneous utility features** such as Discord avatar lookup, Pokedex entries, competitive Pokemon sets from Smogon, Pokemon weakness analysis, and learnset information."
        ],
        "image": "projects/rotom_bot.png",
        "githubUrl": "https://github.com/the-pokehub/Rotom-Bot",
        "demoUrl": null
    },
    {
        "id": 5,
        "title": "Private Chat Application",
        "tags": [
            "Flask",
            "Socket.IO",
            "WebSockets",
            "Encryption",
            "Real-time",
            "Chat Application"
        ],
        "description": [
            "• A private chat application built with Flask, Socket.IO, and WebSockets.",
            "• Enables **real-time communication** between users in chat rooms.",
            "• Features **RSA encryption** for secure message exchange.",
            "• Allows users to **share media files** within the chat environment.",
            "• Comes with a **responsive design** for optimal viewing across various screen sizes.",
            "• Provides both a **web-based Flask application** and a **command-prompt based Python client** for connection."
        ],
        "image": "projects/private_chat.png",
        "githubUrl": "https://github.com/N00BSC00B/Private-Chat",
        "demoUrl": "http://87.106.36.114:6017/"
    },
    {
        "id": 6,
        "title": "Jhagmag LED Controller",
        "tags": [
            "Arduino",
            "HC-05",
            "Bluetooth",
            "PyQt6",
            "LED",
            "Python"
        ],
        "description": [
            "• An Arduino-based LED controller for vibrant, customizable lighting effects.",
            "• Features Bluetooth control via HC-05 module and optional push-button for offline pattern swapping.",
            "• Offers a variety of LED patterns including Solid, Fade, Cycle, Rainbow Cycle, Breathing, and Random.",
            "• Includes advanced features like real-time audio visualization and screen color detection.",
            "• Provides an intuitive PyQt6-based GUI for cross-platform compatibility and control.",
            "• Designed with a compact setup, assembled on a dot matrix board and enclosed in a custom housing."
        ],
        "image": "projects/jhagmag.jpg",
        "githubUrl": "https://github.com/N00BSC00B/Jhagmag-LED-Controller",
        "demoUrl": null
    },
    {
        "id": 7,
        "title": "Personal Assistant",
        "tags": [
            "Python",
            "PyQt6",
            "Voice Assistant",
            "GUI",
            "Automation"
        ],
        "description": [
            "• A personal assistant application built with Python and PyQt6, offering various functionalities through voice commands and a graphical user interface.",
            "• Features include **voice command recognition**, **screen recording**, **taking screenshots**, and controlling system settings.",
            "• Can **open applications and websites**, provide **weather updates**, **jokes**, **Google search results**, and **news headlines**.",
            "• Supports **volume and brightness control**, as well as locking/sleeping the computer.",
            "• Highly **customizable settings** for AI name, hotkeys, and more.",
            "• Provides a streamlined way to interact with your computer using natural language."
        ],
        "image": "projects/assistant.png",
        "githubUrl": "https://github.com/assistantdost/Personal-Assistant",
        "demoUrl": null
    },
    {
        "id": 8,
        "title": "DOST Web",
        "tags": [
            "Flask",
            "Python",
            "Web Application",
            "Personal Assistant"
        ],
        "description": [
            "• A Flask-based web application designed to interact with 'DOST', a Personal Assistant for Windows.",
            "• Facilitates **user registration and login** for managing personal assistant settings.",
            "• Provides access to the **privacy policy and terms and conditions**.",
            "• Enables **downloading the personal assistant application** and staying updated with **changelogs**.",
            "• Offers **password recovery** functionality and allows users to view **status updates** related to the assistant."
        ],
        "image": "projects/dost.jpg",
        "githubUrl": "https://github.com/assistantdost/Web",
        "demoUrl": "https://web-dost.onrender.com"
    },
    {
        "id": 9,
        "title": "Tic Tac Toe GUI",
        "tags": [
            "Python",
            "Tkinter",
            "GUI",
            "Standalone Application"
        ],
        "description": [
            "• A standalone Windows application for playing the classic Tic Tac Toe game.",
            "• Features a user-friendly graphical interface built with **CustomTkinter**.",
            "• Supports both **local multiplayer** and **single-player against a computer AI**.",
            "• Provides a simple, engaging way to play Noughts and Crosses on your desktop."
        ],
        "image": "projects/play.png",
        "githubUrl": "https://github.com/N00BSC00B/tic-tac-toe",
        "demoUrl": null
    }
]